
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.25+60 (git sha1 611f71c67, x86_64-w64-mingw32-g++ 9.2.1 -Os)


-- Parsing `rca.v' using frontend ` -vlog2k' --

1. Executing Verilog-2005 frontend: rca.v
Parsing Verilog input from `rca.v' to AST representation.
Storing AST representation for module `$abstract\halfadder'.
Storing AST representation for module `$abstract\fulladder'.
Storing AST representation for module `$abstract\fulladder2'.
Storing AST representation for module `$abstract\rca4'.
Successfully finished Verilog frontend.

-- Running command `check; hierarchy -check; flatten; check -assert' --

2. Executing CHECK pass (checking for obvious problems).
Checking module $abstract\rca4...
Checking module $abstract\fulladder2...
Checking module $abstract\fulladder...
Checking module $abstract\halfadder...
Found and reported 0 problems.

3. Executing HIERARCHY pass (managing design hierarchy).

4. Executing FLATTEN pass (flatten design).

5. Executing CHECK pass (checking for obvious problems).
Checking module $abstract\rca4...
Checking module $abstract\fulladder2...
Checking module $abstract\fulladder...
Checking module $abstract\halfadder...
Found and reported 0 problems.

End of script. Logfile hash: e541783376
Yosys 0.25+60 (git sha1 611f71c67, x86_64-w64-mingw32-g++ 9.2.1 -Os)
Time spent: 20% 2x read_verilog (0 sec), 20% 2x check (0 sec), ...
